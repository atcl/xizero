<?xml version="1.0" encoding="utf-8" ?>

<?xml-stylesheet href="CLstyle.xsl" type="text/xsl" ?>

<class static="1" istemplate="0">
	
	<filename>CLmath.hh</filename>
	
	<name>CLmath</name>
	
	<info></info>
	
	<derived>
		<parent href="Cbase.xml">CLbase</parent>	
	</derived>
	
	<attribute ispublic="0" isstatic="0">
		<name>seed</name>
		<type>xlong</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>fxpi</name>
		<type>float</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clpi</name>
		<type>float</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clsin</name>
		<type>float*</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clcos</name>
		<type>float*</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>cltan</name>
		<type>float*</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clarcsin</name>
		<type>xlong*</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clarccos</name>
		<type>xlong*</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>clarctan</name>
		<type>xlong*</type>
		<info></info>
	</attribute>
	
	<method ispublic="0" isstatic="0">
		<name>CLmath</name>
		<info>Constructor</info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>~CLmath</name>
		<info>Destructor</info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>sign</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>heaviside</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>delta</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>absolute</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>min</name>
		<returns>T</returns>
		<parameter>T a</parameter>
		<parameter>T b</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>max</name>
		<returns>T</returns>
		<parameter>T a</parameter>
		<parameter>T b</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>round</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>roundup</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>rounddown</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>sqrt</name>
		<returns>T</returns>
		<parameter>T x</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>deg2rad</name>
		<returns>T</returns>
		<parameter>T d</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>power</name>
		<returns>T</returns>
		<parameter>T b</parameter>
		<parameter>xlong e</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>faftorial</name>
		<returns>T</returns>
		<parameter>T f</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>doublefactorial</name>
		<returns>T</returns>
		<parameter>T f</parameter>
		<qualifier>template&lt;typename T&gt;,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>pi</name>
		<returns>float</returns>>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>sin</name>
		<returns>float</returns>
		<parameter>xlong x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>cos</name>
		<returns>float</returns>
		<parameter>xlong x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>tan</name>
		<returns>float</returns>
		<parameter>xlong x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>arcsin</name>
		<returns>xlong</returns>
		<parameter>float x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>arccos</name>
		<returns>xlong</returns>
		<parameter>float x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>arctan</name>
		<returns>xlong</returns>
		<parameter>float x</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>odeeuler</name>
		<returns>float</returns>
		<parameter>float(*f)(float,float)</parameter>
		<parameter>float x0</parameter>
		<parameter>float t0</parameter>
		<parameter>float h</parameter>
		<parameter>xlong k</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>random</name>
		<returns>xlong</returns>
		<parameter>uxlong range</parameter>
		<info></info>
		<example></example>
	</method>
	
</class>
