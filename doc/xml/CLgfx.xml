<?xml version="1.0" encoding="utf-8" ?>

<?xml-stylesheet href="CLstyle.xsl" type="text/xsl" ?>

<class static="1" istemplate="0">
	
	<filename>CLgfx.hh</filename>
	
	<name>CLgfx</name>
	
	<info></info>
	
	<depends>
		<module href="clmath.xml">CLmath</module>
		<module href="clscreen.xml">CLscreen</module>
		<module href="clformat.xml">CLformat</module>
		<module href="clstring.xml">CLstring</module>
		<module href="clsystem.xml">CLsystem</module>
	</depends>
	
	<derived>
		<parent href="CLbase.xml">CLbase</parent>	
	</derived>
	
	<attribute ispublic="0" isstatic="0">
		<name>fonts</name>
		<type>CLfont**</type>
		<info></info>
	</attribute>
	
	<method ispublic="0" isstatic="0">
		<name>drawcirclepixel</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>inline,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>drawclipcirclepixel</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>inline,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>drawellipsepixel</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>inline,const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>CLgfx</name>
		<info>Constructor</info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>~CLgfx</name>
		<info>Destructor</info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>readpixel</name>
		<returns>uxlong</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawpixel</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c</parameter>
		<parameter>bool b=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawpixeldirect</name>
		<returns>void</returns>
		<parameter>uxlong* b</parameter>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>copypixel</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawblpixel</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong c1</parameter>
		<parameter>uxlong c2</parameter>
		<parameter>xlong i</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawline</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<parameter>uxlong c</parameter>
		<parameter>bool aa=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawrectangle</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<parameter>uxlong c</parameter>
		<parameter>bool f=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawguirectangle</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<parameter>uxlong c1</parameter>
		<parameter>uxlong c2</parameter>
		<parameter>bool f</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawpolygon</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<parameter>xlong x3</parameter>
		<parameter>xlong y3</parameter>
		<parameter>xlong x4</parameter>
		<parameter>xlong y4</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawarc</name>
		<returns>void</returns>
		<parameter>xlong x1</parameter>
		<parameter>xlong y1</parameter>
		<parameter>xlong x2</parameter>
		<parameter>xlong y2</parameter>
		<parameter>xlong a</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawcircle</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong r</parameter>
		<parameter>uxlong c</parameter>
		<parameter>bool a=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawclipcircle</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong r</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawellipse</name>
		<returns>void</returns>
		<parameter>xlong xc</parameter>
		<parameter>xlong yc</parameter>
		<parameter>xlong r1</parameter>
		<parameter>xlong r2</parameter>
		<parameter>uxlong c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>fill</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong oc</parameter>
		<parameter>uxlong nc</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>fillframe</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>uxlong oc</parameter>
		<parameter>uxlong nc</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawsprite</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>sprite* s</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawspriterotated</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>sprite* s</parameter>
		<parameter>xlong w</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawspriteanimated</name>
		<returns>void</returns>
		<parameter>xlong </parameter>
		<parameter>xlong y</parameter>
		<parameter>sprite** s</parameter>
		<parameter>xlong i</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>putsprite</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>sprite* s</parameter>
		<parameter>sprite* t</parameter>
		<parameter>xlong m</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>loadfonts</name>
		<returns>void</returns>
		<parameter>CLfile* f</parameter>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawfontchar</name>
		<returns>xlong</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>const xchar a</parameter>
		<parameter>uxlong f</parameter>
		<parameter>uxlong fc</parameter>
		<parameter>uxlong bc=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawfontstring</name>
		<returns>void</returns>
		<parameter>xlong x</parameter>
		<parameter>xlong y</parameter>
		<parameter>const xchar* a</parameter>
		<parameter>uxlong f</parameter>
		<parameter>uxlong fc</parameter>
		<parameter>uxlong bc=0</parameter>
		<parameter>xlong s=0</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>getfontstringwidth</name>
		<returns>xlong</returns>
		<parameter>const xchar* a</parameter>
		<parameter>uxlong f</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>getfontstringheight</name>
		<returns>xlong</returns>
		<parameter>const xchar* a</parameter>
		<parameter>uxlong f</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>savescreen</name>
		<returns>sprite*</returns>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>drawscreen</name>
		<returns>void</returns>
		<parameter>sprite* s</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>getEGAcolor</name>
		<returns>uxlong</returns>
		<parameter>xchar c</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>blendcolors</name>
		<returns>uxlong</returns>
		<parameter>uxlong c1</parameter>
		<parameter>uxlong c2</parameter>
		<parameter>xlong m</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>getgradient</name>
		<returns>uxlong*</returns>
		<parameter>uxlong s</parameter>
		<parameter>uxlong e</parameter>
		<parameter>xlong i</parameter>
		<qualifier>const</qualifier>
		<info></info>
		<example></example>
	</method>
	
</class>
