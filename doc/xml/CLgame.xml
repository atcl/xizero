<?xml version="1.0" encoding="utf-8" ?>

<?xml-stylesheet href="CLstyle.xsl" type="text/xsl" ?>

<class static="1" istemplate="0">
	
	<filename>CLgame.hh</filename>
	
	<name>CLgame</name>
	
	<info></info>
	
	<depends>
		<module href="CLmath.xml">CLmath</module>
	</depends>
	
	<derived>
		<parent href="CLbase.xml">CLbase</parent>	
	</derived>
	
	<attribute ispublic="0" isstatic="0">
		<name>boundx1</name>
		<type>xlong</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>boundx2</name>
		<type>xlong</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>boundy1</name>
		<type>xlong</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>boundy2</name>
		<type>xlong</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>slopes[2]</name>
		<type>CLfvector</type>
		<info></info>
	</attribute>

	<attribute ispublic="0" isstatic="0">
		<name>inters[6][2]</name>
		<type>float</type>
		<info></info>
	</attribute>
	
	<method ispublic="0" isstatic="0">
		<name>CLgame</name>
		<info>Constructor</info>
		<example></example>
	</method>

	<method ispublic="0" isstatic="0">
		<name>~CLgame</name>
		<info>Destructor</info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>setboundaries</name>
		<returns>void</returns>
		<parameter>xlong bx1=0</parameter>
		<parameter>xlong by1=0</parameter>
		<parameter>xlong bx2=XRES</parameter>
		<parameter>xlong by2=YRES</parameter>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>boundary</name>
		<returns>bool</returns>
		<parameter>const clvector&amp; p</parameter>
		<parameter>xlong mark=0</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>boundary</name>
		<returns>xlong</returns>
		<parameter>const clvector&amp; p</parameter>
		<parameter>const CLbox&amp; bb</parameter>
		<parameter>bool c=0</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>collision</name>
		<returns>xlong</returns>
		<parameter>const clvector&amp; p</parameter>
		<parameter>const CLbox&amp; bb</parameter>
		<parameter>const clvector&amp; q</parameter>
		<parameter>bool n=1</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>collision</name>
		<returns>xlong</returns>
		<parameter>const clvector&amp; p</parameter>
		<parameter>const CLbox&amp; bb</parameter>
		<parameter>const clvector&amp; q</parameter>
		<parameter>bool n=1</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>collision</name>
		<returns>xlong</returns>
		<parameter>const clvector&amp; p1</parameter>
		<parameter>const CLbox&amp; bb1</parameter>
		<parameter>const clvector&amp; p2</parameter>
		<parameter>const CLbox&amp; bb2</parameter>
		<parameter>bool n=1</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>

	<method ispublic="1" isstatic="0">
		<name>terrain</name>
		<returns>CLfvector</returns>
		<parameter>const clvector&amp; p</parameter>
		<parameter>const CLbox* bb</parameter>
		<parameter>const CLobject** t</parameter>
		<parameter>bool fwbw</parameter>
		<qualifier>template&lt;class clvector&gt;</qualifier>
		<info></info>
		<example></example>
	</method>
	
</class>
